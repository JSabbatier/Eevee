<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_users_8cpp" kind="file">
    <compoundname>Users.cpp</compoundname>
    <includes refid="_users_8h" local="yes">Users.h</includes>
    <includes local="no">codecvt</includes>
    <includes local="no">cstring</includes>
    <incdepgraph>
      <node id="160">
        <label>string</label>
      </node>
      <node id="159">
        <label>map</label>
      </node>
      <node id="165">
        <label>md5.h</label>
        <link refid="md5_8h"/>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
      </node>
      <node id="158">
        <label>Users.h</label>
        <link refid="_users_8h"/>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
      </node>
      <node id="164">
        <label>cpprest/http_client.h</label>
      </node>
      <node id="162">
        <label>ctime</label>
      </node>
      <node id="161">
        <label>User.h</label>
        <link refid="user_8h"/>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
      </node>
      <node id="169">
        <label>codecvt</label>
      </node>
      <node id="168">
        <label>math.h</label>
      </node>
      <node id="167">
        <label>iostream</label>
      </node>
      <node id="163">
        <label>Point.h</label>
        <link refid="_point_8h"/>
      </node>
      <node id="157">
        <label>J:/Eevee/application server/ApplicationServer/ApplicationServer/Users.cpp</label>
        <link refid="Users.cpp"/>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
      </node>
      <node id="166">
        <label>cstring</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_users_8cpp_1afd67a6e5d9cb236897e2381fc4fcf4e7" prot="public" static="no" mutable="no">
        <type>std::wstring_convert&lt; std::codecvt_utf8_utf16&lt; wchar_t &gt; &gt;</type>
        <definition>std::wstring_convert&lt;std::codecvt_utf8_utf16&lt;wchar_t&gt; &gt; strconverter</definition>
        <argsstring></argsstring>
        <name>strconverter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="J:/Eevee/application server/ApplicationServer/ApplicationServer/Users.cpp" line="7" column="1" bodyfile="J:/Eevee/application server/ApplicationServer/ApplicationServer/Users.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_users_8h" kindref="compound">Users.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;codecvt&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceweb" kindref="compound">web</ref>;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="_users_8cpp_1afd67a6e5d9cb236897e2381fc4fcf4e7" refkind="member"><highlight class="normal">std::wstring_convert&lt;std::codecvt_utf8_utf16&lt;wchar_t&gt;&gt;<sp/><ref refid="_users_8cpp_1afd67a6e5d9cb236897e2381fc4fcf4e7" kindref="member">strconverter</ref>;<sp/></highlight><highlight class="comment">//<sp/>Converter<sp/>from<sp/>std::string<sp/>to<sp/>wchar_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="class_users_1af1f5c371c3f1e7f9b14210ed0d3718bc" refkind="member"><highlight class="normal"><ref refid="class_users_1af1f5c371c3f1e7f9b14210ed0d3718bc" kindref="member">Users::Users</ref>()</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>list.clear();</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="class_users_1a43af31ac034008281aeed0210bf2a0dd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_users_1a43af31ac034008281aeed0210bf2a0dd" kindref="member">Users::clear</ref>()</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>list.clear();</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="class_users_1a1be44c97e71f822f29ca61451c7e472a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_users_1a1be44c97e71f822f29ca61451c7e472a" kindref="member">Users::size</ref>()</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list.size();</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class_users_1a33ff9aadcaef989bf3c8570358f791f6" refkind="member"><highlight class="normal"><ref refid="class_users_1a33ff9aadcaef989bf3c8570358f791f6" kindref="member">Users::~Users</ref>()</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_users_1aa1d559cc1dec13d004f7e18d1e9a4326" refkind="member"><highlight class="normal"><ref refid="class_user" kindref="compound">User</ref><sp/>*<sp/><ref refid="class_users_1aa1d559cc1dec13d004f7e18d1e9a4326" kindref="member">Users::createClient</ref>(<ref refid="class_point" kindref="compound">Point</ref><sp/>coordinates)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_user" kindref="compound">User</ref><sp/>*<sp/>cl<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_user" kindref="compound">User</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>utility::string_t<sp/>token;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//generate<sp/>a<sp/>new<sp/>token<sp/>if<sp/>there<sp/>is<sp/>an<sp/>already<sp/>existing<sp/>one<sp/>it<sp/>generate<sp/>an<sp/>another<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token<sp/>=<sp/>GenerateToken(coordinates);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(list.count(token)!=0);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>cl-&gt;<ref refid="class_user_1aa91df7f38b7e0481c67c79c4a26eda41" kindref="member">setToken</ref>(token);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>cl-&gt;<ref refid="class_user_1a641d8b376db499805341384fce817a4f" kindref="member">setDistance</ref>(0);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>cl-&gt;<ref refid="class_user_1a3ebf49004b7a0aa9bec881b1470d0b51" kindref="member">setLstConnection</ref>(std::time(0));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>cl-&gt;<ref refid="class_user_1aa28248264f5bff18ca173c5575ecd0eb" kindref="member">setLstPositionKnown</ref>(coordinates);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>cl-&gt;<ref refid="class_user_1a7d2aee609fe856b9162cf51b54d15561" kindref="member">setStates</ref>(1);<sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>connected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>list[token]=<sp/>cl;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cl;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49" refid="class_users_1a394ba0ff537cbd267106f702d6e17c83" refkind="member"><highlight class="normal"><ref refid="class_user" kindref="compound">User</ref><sp/>*<sp/><ref refid="class_users_1a394ba0ff537cbd267106f702d6e17c83" kindref="member">Users::getClient</ref>(utility::string_t<sp/>token)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list.at(token);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53" refid="class_users_1a9539a5ad196643c109b808acfadcd44d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_users_1a9539a5ad196643c109b808acfadcd44d" kindref="member">Users::moveClient</ref>(utility::string_t<sp/>token,<sp/><ref refid="class_point" kindref="compound">Point</ref><sp/>coordinates)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_user" kindref="compound">User</ref><sp/>*<sp/>cl<sp/>=<sp/>list.at(token);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>cl-&gt;<ref refid="class_user_1a641d8b376db499805341384fce817a4f" kindref="member">setDistance</ref>(cl-&gt;<ref refid="class_user_1a3f137c7a04dadc52705992f1c59d2a5c" kindref="member">getDistance</ref>()<sp/>+<sp/>(this-&gt;distanceBetweenTwoPointsInMeter(cl-&gt;<ref refid="class_user_1ac3f4b47d1262a3bda6ff380dbd10a58d" kindref="member">getLstPositionKnown</ref>(),<sp/>coordinates)));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>cl-&gt;<ref refid="class_user_1aa28248264f5bff18ca173c5575ecd0eb" kindref="member">setLstPositionKnown</ref>(coordinates);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="class_users_1a33884f39dc6a767e923410a78815b001" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_users_1a33884f39dc6a767e923410a78815b001" kindref="member">Users::clientIsAt</ref>(utility::string_t<sp/>token,<sp/><ref refid="class_point" kindref="compound">Point</ref><sp/>coordonates)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_user" kindref="compound">User</ref><sp/>*<sp/>cl<sp/>=<sp/>list.at(token);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">((cl-&gt;<ref refid="class_user_1ac3f4b47d1262a3bda6ff380dbd10a58d" kindref="member">getLstPositionKnown</ref>().<ref refid="class_point_1aa4bd02640706ad6f00d7a1bca9768d4d" kindref="member">x</ref>()<sp/>==<sp/>coordonates.<ref refid="class_point_1aa4bd02640706ad6f00d7a1bca9768d4d" kindref="member">x</ref>()<sp/>&amp;&amp;<sp/>cl-&gt;<ref refid="class_user_1ac3f4b47d1262a3bda6ff380dbd10a58d" kindref="member">getLstPositionKnown</ref>().<ref refid="class_point_1aae549f6b778ea2fe166387627fddecec" kindref="member">y</ref>()<sp/>==<sp/>coordonates.<ref refid="class_point_1aae549f6b778ea2fe166387627fddecec" kindref="member">y</ref>()<sp/>&amp;&amp;<sp/>cl-&gt;<ref refid="class_user_1ac3f4b47d1262a3bda6ff380dbd10a58d" kindref="member">getLstPositionKnown</ref>().<ref refid="class_point_1aebbff516d9b84bccee19f24a8800ee8e" kindref="member">z</ref>()<sp/>==<sp/>coordonates.<ref refid="class_point_1aebbff516d9b84bccee19f24a8800ee8e" kindref="member">z</ref>())<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">utility::string_t<sp/>Users::GenerateToken(<ref refid="class_point" kindref="compound">Point</ref><sp/>coordinates)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[50];</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>std::time_t<sp/>t<sp/>=<sp/>std::time(0);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf_s(buffer,<sp/></highlight><highlight class="stringliteral">&quot;%f<sp/>%f<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>coordinates.<ref refid="class_point_1aa4bd02640706ad6f00d7a1bca9768d4d" kindref="member">x</ref>(),<sp/>coordinates.<ref refid="class_point_1aae549f6b778ea2fe166387627fddecec" kindref="member">y</ref>(),<sp/>t);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_d5" kindref="compound">MD5</ref><sp/>retour<sp/>=<sp/><ref refid="class_m_d5" kindref="compound">MD5</ref>(buffer);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="_users_8cpp_1afd67a6e5d9cb236897e2381fc4fcf4e7" kindref="member">strconverter</ref>.from_bytes(retour.hexdigest()));</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Users::distanceBetweenTwoPointsInMeter(<ref refid="class_point" kindref="compound">Point</ref><sp/>coordinate1,<sp/><ref refid="class_point" kindref="compound">Point</ref><sp/>coordinate2)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>distance;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>distance<sp/>=<sp/>round((acos(sin(coordinate1.<ref refid="class_point_1aa4bd02640706ad6f00d7a1bca9768d4d" kindref="member">x</ref>()<sp/>*<sp/>M_PI<sp/>/<sp/>180)<sp/>*<sp/>sin(coordinate2.<ref refid="class_point_1aa4bd02640706ad6f00d7a1bca9768d4d" kindref="member">x</ref>()<sp/>*<sp/>M_PI<sp/>/<sp/>180)<sp/>+<sp/>cos(coordinate1.<ref refid="class_point_1aa4bd02640706ad6f00d7a1bca9768d4d" kindref="member">x</ref>()<sp/>*<sp/>M_PI<sp/>/<sp/>180)<sp/>*<sp/>cos(coordinate2.<ref refid="class_point_1aa4bd02640706ad6f00d7a1bca9768d4d" kindref="member">x</ref>()<sp/>*<sp/>M_PI<sp/>/<sp/>180)<sp/>*<sp/>cos((coordinate1.<ref refid="class_point_1aae549f6b778ea2fe166387627fddecec" kindref="member">y</ref>()<sp/>-<sp/>coordinate2.<ref refid="class_point_1aae549f6b778ea2fe166387627fddecec" kindref="member">y</ref>())<sp/>*<sp/>M_PI<sp/>/<sp/>180))<sp/>*<sp/>180<sp/>/<sp/>M_PI)<sp/>*<sp/>60<sp/>*<sp/>1852);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>distance;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="class_users_1a7825d70306c9dc993cee3b46ad8e1d9e" refkind="member"><highlight class="normal">json::value<sp/><ref refid="class_users_1a7825d70306c9dc993cee3b46ad8e1d9e" kindref="member">Users::getStats</ref>()</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>json::value<sp/>jsonResult;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>jsonResult[U(</highlight><highlight class="stringliteral">&quot;connected_users&quot;</highlight><highlight class="normal">)]<sp/>=<sp/>json::value::number((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)list.size());<sp/></highlight><highlight class="comment">//<sp/>Casting<sp/>int<sp/>because<sp/>the<sp/>return<sp/>of<sp/>size()<sp/>match<sp/>2<sp/>overloaded<sp/>instances<sp/>of<sp/>number()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cpt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter<sp/>=<sp/>list.cbegin();<sp/>iter<sp/>!=<sp/>list.cend();<sp/>++iter)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>userId[25];</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swprintf_s(userId,<sp/>L</highlight><highlight class="stringliteral">&quot;u%d&quot;</highlight><highlight class="normal">,<sp/>cpt);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jsonResult[U(</highlight><highlight class="stringliteral">&quot;users&quot;</highlight><highlight class="normal">)][userId][U(</highlight><highlight class="stringliteral">&quot;token&quot;</highlight><highlight class="normal">)]<sp/>=<sp/>json::value::string(iter-&gt;first);<sp/></highlight><highlight class="comment">//<sp/>First<sp/>is<sp/>the<sp/>token</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jsonResult[U(</highlight><highlight class="stringliteral">&quot;users&quot;</highlight><highlight class="normal">)][userId][U(</highlight><highlight class="stringliteral">&quot;statistics&quot;</highlight><highlight class="normal">)][U(</highlight><highlight class="stringliteral">&quot;lastKnownLocation&quot;</highlight><highlight class="normal">)][U(</highlight><highlight class="stringliteral">&quot;latitude&quot;</highlight><highlight class="normal">)]<sp/>=<sp/>json::value::number(iter-&gt;second-&gt;getLstPositionKnown().x());<sp/></highlight><highlight class="comment">//<sp/>Second<sp/>is<sp/>the<sp/>user<sp/>ptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jsonResult[U(</highlight><highlight class="stringliteral">&quot;users&quot;</highlight><highlight class="normal">)][userId][U(</highlight><highlight class="stringliteral">&quot;statistics&quot;</highlight><highlight class="normal">)][U(</highlight><highlight class="stringliteral">&quot;lastKnownLocation&quot;</highlight><highlight class="normal">)][U(</highlight><highlight class="stringliteral">&quot;longitude&quot;</highlight><highlight class="normal">)]<sp/>=<sp/>json::value::number(iter-&gt;second-&gt;getLstPositionKnown().y());</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jsonResult[U(</highlight><highlight class="stringliteral">&quot;users&quot;</highlight><highlight class="normal">)][userId][U(</highlight><highlight class="stringliteral">&quot;statistics&quot;</highlight><highlight class="normal">)][U(</highlight><highlight class="stringliteral">&quot;travelledDistance&quot;</highlight><highlight class="normal">)]<sp/>=<sp/>json::value::number(iter-&gt;second-&gt;getDistance());</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jsonResult[U(</highlight><highlight class="stringliteral">&quot;users&quot;</highlight><highlight class="normal">)][userId][U(</highlight><highlight class="stringliteral">&quot;statistics&quot;</highlight><highlight class="normal">)][U(</highlight><highlight class="stringliteral">&quot;rank&quot;</highlight><highlight class="normal">)]<sp/>=<sp/>json::value::number(0);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpt++;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jsonResult;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="J:/Eevee/application server/ApplicationServer/ApplicationServer/Users.cpp"/>
  </compounddef>
</doxygen>
